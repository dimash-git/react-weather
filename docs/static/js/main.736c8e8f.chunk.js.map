{"version":3,"sources":["logo.svg","Components/Header.js","icons.js","Components/Weather.js","App.js","index.js"],"names":["module","exports","Header","logo","className","src","alt","href","target","rel","weatherIcons","useStyles","makeStyles","card","maxWidth","margin","marginBottom","searchWrapper","display","justifyContent","alignItems","pr1","paddingRight","error","color","padding","cap","textTransform","pad","paddingTop","paddingBottom","fontWeight","listItem","icon","float","fontSize","forecastIcon","addIcons","WeatherSearch","isLoading","setSearchTerm","setIsLoading","classes","useState","val","setVal","onSubmit","e","preventDefault","TextField","id","placeholder","value","name","onChange","InputProps","startAdornment","InputAdornment","endAdornment","CircularProgress","size","Typography","WeatherCard","forecasts","city","dateObj","Date","currTime","getHours","getMinutes","Card","CardContent","variant","component","country","dayjs","format","desc","Math","floor","temp","style","wind","hum","Divider","WeatherForecast","List","map","forecast","ListItem","button","key","dt","ListItemText","primary","dt_txt","textAlign","flex","IconButton","disabled","weather","main","Weather","App","setForecasts","searchTerm","setCity","setError","useEffect","getForecasts","a","async","fetch","response","json","data","mapToWeatherInterface","list","description","humidity","round","speed","mappedData","i","length","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.736c8e8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ed1e6c52.svg\";","import React from \"react\"\n\nconst Header = ({ logo }) => {\n  return (\n    <header className=\"Header\">\n      <div className=\"logo\">\n        <img src={logo} alt=\"React Weather App\" />\n      </div>\n      <nav>\n        <ul>\n          <li>\n            <a\n              href=\"https://github.com/dimash-git/react-weather\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Github\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header\n","const weatherIcons = {\n  \"01d\": \"wi-day-sunny\",\n  \"02d\": \"wi-day-cloudy\",\n  \"03d\": \"wi-cloud\",\n  \"04d\": \"wi-cloudy\",\n  \"09d\": \"wi-showers\",\n  \"10d\": \"wi-day-rain-mix\",\n  \"11d\": \"wi-thunderstorm\",\n  \"13d\": \"wi-snow\",\n  \"50d\": \"wi-fog\",\n  \"01n\": \"wi-night-clear\",\n  \"02n\": \"wi-night-alt-cloudy\",\n  \"03n\": \"wi-night-alt-cloudy-high\",\n  \"04n\": \"wi-cloudy\",\n  \"09n\": \"wi-night-alt-sprinkle\",\n  \"10n\": \"wi-night-alt-showers\",\n  \"11n\": \"wi-night-alt-thunderstorm\",\n  \"13n\": \"wi-night-alt-snow\",\n  \"50n\": \"wi-night-fog\"\n}\nexport default weatherIcons\n","import React, { useState } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport {\n  Card,\n  CardContent,\n  Typography,\n  TextField,\n  InputAdornment,\n  CircularProgress,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  IconButton\n} from \"@material-ui/core\"\nimport SearchIcon from \"@material-ui/icons/Search\"\n\nimport dayjs from \"dayjs\"\nimport weatherIcons from \"../icons.js\"\nimport \"../weather-icons.min.css\"\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 600,\n    margin: \"0 auto\",\n    marginBottom: \"1rem\"\n  },\n  searchWrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: \"2rem\"\n  },\n  pr1: {\n    paddingRight: \"1rem\"\n  },\n  error: {\n    color: \"red\",\n    padding: \"10px\"\n  },\n  cap: {\n    textTransform: \"capitalize\"\n  },\n  pad: {\n    paddingTop: \"4rem\",\n    paddingBottom: \"2rem\",\n    fontWeight: 400\n  },\n  listItem: {\n    padding: \"1.5rem 0.25rem\"\n  },\n  icon: {\n    float: \"right\",\n    padding: \"15px\",\n    fontSize: \"110px\",\n    color: \"purple\"\n  },\n  forecastIcon: {\n    fontSize: \"30px\",\n    color: \"purple\"\n  },\n  addIcons: {\n    color: \"purple\",\n    padding: \"0 0.5rem\"\n  }\n})\n\nconst WeatherSearch = ({ isLoading, setSearchTerm, setIsLoading, error }) => {\n  const classes = useStyles()\n  const [val, setVal] = useState(\"\")\n  const handleChange = e => {\n    setVal(e.target.value)\n  }\n  const handleSubmit = e => {\n    e.preventDefault()\n    setIsLoading(true)\n    setSearchTerm(val)\n  }\n  return (\n    <div className={classes.searchWrapper}>\n      <form onSubmit={handleSubmit}>\n        <TextField\n          id=\"standard-basic\"\n          placeholder=\"Enter a city name\"\n          className={classes.pr1}\n          value={val}\n          name=\"searchTerm\"\n          onChange={handleChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment className={classes.pr1}>\n                <SearchIcon />\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment>\n                {isLoading && <CircularProgress size={20} />}\n              </InputAdornment>\n            )\n          }}\n        />\n        {error && (\n          <Typography className={classes.error} error>\n            {error}\n          </Typography>\n        )}\n      </form>\n    </div>\n  )\n}\n\nconst WeatherCard = ({ forecasts, city }) => {\n  const classes = useStyles()\n  const dateObj = new Date()\n  const currTime = dateObj.getHours() + \":\" + dateObj.getMinutes()\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h1\">\n          {city.name + \", \" + city.country}\n        </Typography>\n        <Typography\n          variant=\"body1\"\n          display=\"block\"\n          color=\"textSecondary\"\n          className={classes.cap}\n        >\n          {dayjs(dateObj).format(\"dddd\") + \", \" + currTime + \", \" + city.desc}\n        </Typography>\n        <Typography display=\"block\">\n          <i className={`wi ${weatherIcons[city.icon]} ${classes.icon}`}></i>\n        </Typography>\n        <Typography variant=\"h2\" color=\"textPrimary\" className={classes.pad}>\n          {Math.floor(city.temp * 10) / 10} &#8451;\n        </Typography>\n        <Typography\n          variant=\"h6\"\n          style={{ paddingBottom: \"1rem\", fontSize: 15 }}\n        >\n          <i className={`wi wi-strong-wind ${classes.addIcons}`}></i>\n          {city.wind} km/h\n          <i className={`wi wi-humidity ${classes.addIcons}`}></i>\n          {city.hum}% Humidity\n        </Typography>\n        <Divider variant=\"middle\" />\n        <WeatherForecast forecasts={forecasts} />\n      </CardContent>\n    </Card>\n  )\n}\n\nconst WeatherForecast = ({ forecasts }) => {\n  const classes = useStyles()\n  return (\n    <List>\n      {forecasts.map(forecast => (\n        <ListItem button key={forecast.dt} className={classes.listItem}>\n          <ListItemText\n            primary={dayjs(forecast.dt_txt).format(\"dddd\")}\n            style={{ textAlign: \"left\", flex: \"1 1 0%\" }}\n          ></ListItemText>\n          <IconButton disabled={true}>\n            <i\n              className={`wi ${weatherIcons[forecast.weather[0].icon]} ${\n                classes.forecastIcon\n              }`}\n            ></i>\n          </IconButton>\n          <ListItemText style={{ textAlign: \"right\", flex: \"1 1 0%\" }}>\n            {Math.floor(forecast.main.temp * 10) / 10} &#8451;\n          </ListItemText>\n        </ListItem>\n      ))}\n    </List>\n  )\n}\n\nconst Weather = ({\n  city,\n  setSearchTerm,\n  forecasts,\n  error,\n  isLoading,\n  setIsLoading\n}) => {\n  return (\n    <div>\n      <WeatherSearch\n        setSearchTerm={setSearchTerm}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        error={error}\n      />\n      <WeatherCard forecasts={forecasts} city={city} />\n    </div>\n  )\n}\n\nexport default Weather\n","import React, { useEffect, useState } from \"react\"\nimport Header from \"./Components/Header\"\nimport Weather from \"./Components/Weather\"\n\nimport logo from \"./logo.svg\"\nimport \"./App.css\"\n\nconst App = () => {\n  const API_KEY = \"358f3b3cc933c0c8f7194f7c77db4dba\"\n  const [forecasts, setForecasts] = useState([])\n  const [searchTerm, setSearchTerm] = useState(\"Almaty\")\n  const [city, setCity] = useState({\n    name: \"\",\n    country: \"\",\n    desc: \"\",\n    hum: \"\",\n    wind: \"\",\n    temp: \"\",\n    icon: \"\"\n  })\n  const [error, setError] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n    getForecasts()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchTerm])\n\n  const getForecasts = async () => {\n    try {\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${searchTerm}&appid=${API_KEY}&units=metric`\n      )\n      const data = await response.json()\n      mapToWeatherInterface(data)\n    } catch (err) {\n      setError(\"Location was not found\")\n    }\n    setIsLoading(false)\n  }\n\n  const mapToWeatherInterface = data => {\n    setCity({\n      name: data.city.name,\n      country: data.city.country,\n      desc: data.list[1].weather[0].description,\n      icon: data.list[1].weather[0].icon,\n      hum: data.list[1].main.humidity,\n      wind: Math.round(data.list[1].wind.speed * 3.6),\n      temp: data.list[1].main.temp\n    })\n    setForecasts(() => {\n      let mappedData = []\n      for (let i = 9; i < data.list.length; i = i + 8) {\n        mappedData.push(data.list[i])\n      }\n      return mappedData\n    })\n    // console.log(forecasts)\n    setError(\"\")\n  }\n  return (\n    <div className=\"App\">\n      <Header logo={logo} />\n      {city.name && (\n        <Weather\n          city={city}\n          setSearchTerm={setSearchTerm}\n          forecasts={forecasts}\n          error={error}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}